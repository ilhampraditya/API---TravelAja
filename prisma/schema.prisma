generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  no_telp       String?   @unique
  password      String
  otp           Int?
  otpExpiration DateTime?
  isVerified    Boolean   @default(false)
  role          String    @default("user")
  google_id     String?
  avatar_url    String?

  @@map("users")
}

model Airport {
  id                  String    @id
  airport_name        String
  continent           String
  country             String
  city                String
  arrival_flights     Flights[] @relation("arrival_airport")
  destination_flights Flights[] @relation("destination_airport")

  @@map("airports")
}

model Airlines {
  airline_id    String     @id
  airline_name  String
  baggage       String
  cabin_baggage String
  flights       Flights[]
  SeatClass     SeatClass? @relation(fields: [Seat_class_id], references: [seat_class_id])
  Seat_class_id Int?

  @@map("airlines")
}

model SeatClass {
  seat_class_id   Int        @id @default(autoincrement())
  
  seat_class_type String
  seat_number     Int
  airlines        Airlines[]

  @@map("seatclass")
}

model Flights {
  flight_code            String     @id
  price                  Float
  date                   DateTime
  departure_time         DateTime
  arrival_time           DateTime
  airline_id             String
  arrival_airport_id     String
  destination_airport_id String
  promotion_id           Int?
  promotion              Promotion? @relation(fields: [promotion_id], references: [promotion_id])
  airlines               Airlines   @relation(fields: [airline_id], references: [airline_id])
  arrival_airport        Airport    @relation("arrival_airport", fields: [arrival_airport_id], references: [id])
  destination_airport    Airport    @relation("destination_airport", fields: [destination_airport_id], references: [id])

  @@map("flights")
}

model Promotion {
  promotion_id Int       @id @default(autoincrement())
  discount     Int
  startDate    DateTime
  endDate      DateTime
  flights      Flights[]

  @@map("promotions")
}
