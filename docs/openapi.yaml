openapi: 3.0.0
info:
  title: TravelAja API
  description: API untuk layanan TravelAja
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
  - url: https://expressjs-develop.up.railway.app/api/v1
paths:
  /register:
    post:
      summary: Register User baru
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "kevin1"
                email:
                  type: string
                  example: "TravelAja@gmail.com"
                no_telp:
                  type: string
                  example: "0811111122"
                password:
                  type: string
                  example: "password123"
      responses:
        "201":
          description: User berhasil terdaftar
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User telah berhasil terdaftar. Silakan periksa email Anda untuk OTP."
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwiZW1haWwiOiJtcXNheGFjcEBtdWF0b2MuY29tIiwiaWF0IjoxNzE2NjY2NjMzLCJleHAiOjE3MTY3NTMwMzN9.W3NoC1hAUqzrvw5qBK_caziJRhcY2TEkKsLO5MsMQm4"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Nama, email, no_telp, dan password dibutuhkan!"
                  data:
                    type: string
                    example: null
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Email dan No. Telp telah digunakan!"
                  data:
                    type: string
                    example: null

  /renew-otp:
    post:
      summary: Memperbarui OTP
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "TravelAja@gmail.com"
      responses:
        "200":
          description: OTP berhasil diperbarui
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "OTP telah berhasil diperbarui. Silakan periksa email Anda untuk OTP yang baru."
                  data:
                    type: string
                    example: null
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Pengguna sudah diverifikasi dan tidak dapat memperbarui OTP"
                  data:
                    type: string
                    example: null
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Email tidak cocok dengan pengguna yang terdaftar"
                  data:
                    type: string
                    example: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Token verifikasi tidak valid"
                  data:
                    type: string
                    example: null

  /verify-otp:
    post:
      summary: Memverifikasi OTP
      tags:
        - Auth
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: integer
                  example: 114687
      responses:
        "200":
          description: User berhasil diverifikasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User berhasil diverifikasi"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: null
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "OTP diperlukan!"
                  data:
                    type: string
                    example: null
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "OTP tidak valid atau telah kedaluwarsa!"
                  data:
                    type: string
                    example: null
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Parameter verifikasi tidak valid"
                  data:
                    type: string
                    example: null

  /login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailOrNoTelp:
                  type: string
                  example: "TravelAja@gmail.com"
                password:
                  type: string
                  example: "password123"
      responses:
        "200":
          description: Login berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Login berhasil"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Ilham"
                      email:
                        type: string
                        example: "TravelAja@gmail.com"
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiZW1haWwiOiJhcGhzMTJAZ21haWwuY29tIiwiaWF0IjoxNzE2Mzk4NTQ4LCJleHAiOjE3MTY0ODQ5NDh9.RWhn7PfFE25eqyUcBmQxPCa1kJELChTcgDj3_CBRMdU"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Email atau No. Telp dan kata sandi diperlukan!"
                  data:
                    type: string
                    example: null
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Password tidak valid!"
                  data:
                    type: string
                    example: null
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Akun Belum terverifikasi, silahkan register ulang!"
                  data:
                    type: string
                    example: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Email atau nomor telepon tidak valid!"
                  data:
                    type: string
                    example: null
  /index:
    get:
      summary: Mendapatkan semua user
      tags:
        - Auth
      responses:
        "200":
          description: Data pengguna berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data pengguna berhasil diambil"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1"
                        name:
                          type: string
                          example: "kevin1"
                        email:
                          type: string
                          example: "TravelAja@gmail.com"
                        no_telp:
                          type: string
                          example: "0811111122"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Terjadi kesalahan saat mengambil data pengguna"
                  data:
                    type: string
                    example: null

  /auth:
    get:
      summary: Autentikasi user
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "OK"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1"
                      email:
                        type: string
                        example: "TravelAja@gmail.com"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Unauthorized"
                  data:
                    type: string
                    example: null
  /forgot-password:
    post:
      summary: lupa password
      tags:
        - "Auth"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "TravelAja@gmail.com"
                password:
                  type: string
                  example: "password123"
      responses:
        "200":
          description: Sukses kirim tautan ke email
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Sukses kirim Email Forget Password"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Email tidek ditemukan"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "gagal mengirim email"

  /reset-password:
    post:
      summary: reset password
      tags:
        - "Auth"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "Password123"
                confirmPassword:
                  type: string
                  example: "Password123"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Berhasil mengatur ulang password pengguna!"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      email:
                        type: string
                        example: "TravelAja@gmail.com"
                      password:
                        type: string
                        example: password123
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Pengguna tidak ditemukan"
                  data:
                    example: null
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Password dan Konfirmasi password harus diisi"
                  data:
                    example: null

  /google:
    get:
      tags:
        - Auth
      summary: Login/register with google
      description: Creates a new user with the provided information.
      responses:
        "200":
          description: Successful user creation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Login berhasil"
                  err:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: "TravelAja"
                          email:
                            type: string
                            example: "TravelAja@gmail.com"
                          password:
                            type: string
                            nullable: true
                            example: null
                          google_id:
                            type: string
                            example: "10113939153987jkxbcd8282"
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiZW1haWwiOiJhcGhzMTJAZ21haWwuY29tIiwiaWF0IjoxNzE2Mzk4NTQ4LCJleHAiOjE3MTY0ODQ5NDh9.RWhn7PfFE25eqyUhhjBmQxPCa1kJELChTcgDj3_CBRMdU"

  /profile:
    get:
      summary: mengambil profile
      tags:
        - Profile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User data retrieved successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1"
                      name:
                        type: string
                        example: "tesss"
                      no_telp:
                        type: string
                        example: "0811111122"
                      avatar_url:
                        type: string
                        example: "https://ik.imagekit.io/travelaja/contoh.png"
        "400":
          description: User tidak ditemukan!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User tidak ditemukan!"
                  data:
                    type: string
                    example: null

  /updateprofile:
    post:
      summary: mengupdate profile termasuk password
      tags:
        - Profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "kevin1"
                no_telp:
                  type: string
                  example: "0811111122"
                password:
                  type: string
                  example: "password123"
      responses:
        "200":
          description: User profile berhasil diupdate!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User profile berhasil diupdate!"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1"
                      name:
                        type: string
                        example: "tesss"
                      no_telp:
                        type: string
                        example: "0811111122"
                      avatar_url:
                        type: string
                        example: "https://ik.imagekit.io/travelaja/contoh.png"
        "401":
          description: User tidak ditemukan!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User tidak ditemukan!"
                  data:
                    type: string
                    example: null
        "422":
          description: field nama, no_telp dan password dibutuhkan!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "field nama, no_telp dan password dibutuhkan!"
                  data:
                    type: string
                    example: null
        "400":
          description: No. Telp telah digunakan!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No. Telp telah digunakan!"
                  data:
                    type: string
                    example: null
  /uploadavatar:
    post:
      summary: mengupload avatar
      tags:
        - Profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: file berhasil diunggah!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "file berhasil diunggah!"
                  data:
                    type: object
                    properties:
                      avatar_url:
                        type: string
                        example: "https://ik.imagekit.io/travelaja/contoh.png"
        "400":
          description: file tidak ada!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "file tidak ada!"
                  data:
                    type: string
                    example: null
  /promotion:
    post:
      summary: membuat promosi
      tags:
        - Promotion
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                discount:
                  type: integer
                  example: 20
                startDate:
                  type: string
                  example: "2024-06-01T14:00:00.000Z"
                endDate:
                  type: string
                  example: "2024-06-02T14:00:00.000Z"
      responses:
        "201":
          description: Promosi berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Promosi berhasil dibuat"
                  data:
                    type: object
                    properties:
                      promotion_id:
                        type: integer
                        example: 1
                      discount:
                        type: integer
                        example: 20
                      startDate:
                        type: string
                        example: "2024-06-01T14:00:00.000Z"
                      endDate:
                        type: string
                        example: "2024-06-02T14:00:00.000Z"
    get:
      summary: mengambil data promosi
      tags:
        - Promotion
      security:
        - bearerAuth: []

      responses:
        "200":
          description: Data Promosi berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data Promosi berhasil diambil"
                  data:
                    type: object
                    properties:
                      promotion_id:
                        type: integer
                        example: 1
                      discount:
                        type: integer
                        example: 20
                      startDate:
                        type: string
                        example: "2024-06-01T14:00:00.000Z"
                      endDate:
                        type: string
                        example: "2024-06-02T14:00:00.000Z"

  /flights/{id}:
    get:
      summary: mengambil data penerbangan berdasarkan parameter id
      tags:
        - Flights
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID Fights
          schema:
            type: string
      responses:
        "200":
          description: Data penerbangan berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data penerbangan berhasil diambil"
                  data:
                    type: object
                    properties:
                      flight_id:
                        type: string
                        example: "GA0000001"
                      price:
                        type: integer
                        example: 1000000
                      total_price:
                        type: integer
                        example: 1000000
                      date:
                        type: string
                        example: "2024-06-05T00:00:00.000Z"
                      departure_time:
                        type: string
                        example: "2024-06-05T14:00:00.000Z"
                      arrival_time:
                        type: string
                        example: "2024-06-05T14:00:00.000Z"
                      airline_id:
                        type: string
                        example: "QG"
                      arrival_airport_id:
                        type: string
                        example: "CGK"
                      destination_airport_id:
                        type: string
                        example: "LOP"
                      promotion_id:
                        type: string
                        example: null
                      seat_class_id:
                        type: integer
                        example: 1
                      airlines:
                        properties:
                          airline_id:
                            type: string
                            example: "QG"
                          airline_name:
                            type: string
                            example: "Citilink"
                          baggage:
                            type: string
                            example: "30"
                          cabin_baggage:
                            type: string
                            example: "7"
                          url_logo:
                            type: string
                            example: "https://ik.imagekit.io/travelaja/1717435283202_VBY4c9eNr.png"
                      arrival_airport:
                        properties:
                          id:
                            type: string
                            example: "CGK"
                          airport_name:
                            type: string
                            example: "Soekarno Hatta International Airport"
                          continent:
                            type: string
                            example: "Asia"
                          country:
                            type: string
                            example: "Indonesia"
                          city:
                            type: string
                            example: "Jakarta"
                      destination_airport:
                        properties:
                          id:
                            type: string
                            example: "LOP"
                          airport_name:
                            type: string
                            example: "Lombok Praya International Airport"
                          continent:
                            type: string
                            example: "Asia"
                          country:
                            type: string
                            example: "Indonesia"
                          city:
                            type: string
                            example: "Lombok"
                      promotion:
                        type: string
                        example: null

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BasicResponse:
      title: BasicResponse
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: "success"
